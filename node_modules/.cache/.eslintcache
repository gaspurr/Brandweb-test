[{"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/index.js":"1","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/App.js":"2","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/MainPage.js":"3","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/Navbar.js":"4"},{"size":154,"mtime":1643562212228,"results":"5","hashOfConfig":"6"},{"size":436,"mtime":1643562447065,"results":"7","hashOfConfig":"6"},{"size":4279,"mtime":1643569519474,"results":"8","hashOfConfig":"6"},{"size":731,"mtime":1643562049811,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1xm1naz",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/index.js",[],["20","21"],"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/App.js",[],"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/MainPage.js",["22","23"],"import React, { useEffect, useState } from 'react';\nimport axios from \"axios\"\nimport {\n    Button,\n    Container,\n    Row,\n    Col,\n    Card,\n    Pagination\n} from \"react-bootstrap\"\n\nfunction MainPage() {\n    const [results, setResults] = useState([])\n    const [gameCards, setGameCards] = useState([])\n\n    const fetcher = async (e) => {\n        e.preventDefault()\n        await axios.get(\"http://localhost:8080/\")\n            .then(res => {\n                res.data.forEach(obj => {\n                    setResults(prev => [...prev, obj])\n                })\n                console.log(results)\n            }).catch(e => {\n                console.log(e)\n            })\n    }\n\n    const fetchCards = async () => {\n        await axios.get(`http://localhost:8080/games`)\n            .then(res => {\n                setGameCards(...gameCards, res.data)\n            }).catch(e => {\n                console.log(e)\n            })\n    }\n\n    useEffect(() => {\n        fetchCards()\n    }, []);\n\n\n\n    return (\n        <Container>\n            <h1>Games</h1>\n            <Row xl={5} xxl={7} lg={4} md={3} sm={2} s>\n                {\n                    gameCards.length > 0 ? gameCards.map((game) => {\n\n                        return (\n                            <Col key={game.id} >\n                                <Card style={{\n                                    minWidth: \"10vh\",\n                                    width: \"100%\",\n                                    marginBottom: \"1rem\",\n                                    maxHeight: \"68vh\",\n                                    height: \"100%\"\n\n                                }}>\n                                    <Card.Img variant=\"top\" style={{ minHeight: \"20vh\", minWidth: \"24vh\", maxHeight: \"22vh\", width: \"100%\" }} src={game.background_image} alt=\"Game image\" />\n                                    <Card.Body style={{ alignItems: \"space-between\", display: \"grid\" }}>\n                                        <h5 className=\"card-title\">{game.name}</h5>\n                                        <Card.Text className=\"card-text\">Rating: {game.rating}</Card.Text>\n                                        <Card.Text>\n                                            {game[\"genres\"].map((genre) => {\n                                                return <span style={{\n                                                    background: \"lightgrey\",\n                                                    width: \"100%\",\n                                                    margin: \"0px 5px 0px 0px\",\n                                                    borderRadius: \"5px\",\n                                                    padding: \"2px 4px 2px 4px\",\n                                                }} key={genre.id}>{genre.name}</span>\n                                            })}\n                                        </Card.Text>\n                                        <Card.Text style={{ fontSize: \"0.8rem\", color: \"grey\" }}>Last updated: {game.updated.slice(0, 10)}</Card.Text>\n                                        <Card.Text >{game.description}</Card.Text>\n                                        <Button variant=\"primary\">See details</Button>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )\n                    }) : null\n                }\n            </Row>\n            <p>This pagination below here doesn't work yet....</p>\n            <Pagination style={{ justifyContent: \"center\", marginTop: \"10vh\" }}>\n\n                <Pagination.First />\n                <Pagination.Prev />\n                <Pagination.Item>{1}</Pagination.Item>\n                <Pagination.Ellipsis />\n\n                <Pagination.Item>{10}</Pagination.Item>\n                <Pagination.Item>{11}</Pagination.Item>\n                <Pagination.Item active>{12}</Pagination.Item>\n                <Pagination.Item>{13}</Pagination.Item>\n                <Pagination.Item disabled>{14}</Pagination.Item>\n\n                <Pagination.Ellipsis />\n                <Pagination.Item>{20}</Pagination.Item>\n                <Pagination.Next />\n                <Pagination.Last />\n            </Pagination>\n\n\n        </Container>\n    )\n}\n\nexport default MainPage;\n","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/Navbar.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":16,"column":11,"nodeType":"30","messageId":"31","endLine":16,"endColumn":18},{"ruleId":"32","severity":1,"message":"33","line":40,"column":8,"nodeType":"34","endLine":40,"endColumn":10,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'fetcher' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCards'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [fetchCards]",{"range":"41","text":"42"},[980,982],"[fetchCards]"]