[{"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/index.js":"1","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/App.js":"2","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/MainPage.js":"3","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/Navbar.js":"4","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/SearchBar.js":"5","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/DetailedView.js":"6","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/env.js":"7","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/Footer.js":"8"},{"size":156,"mtime":1643755018125,"results":"9","hashOfConfig":"10"},{"size":643,"mtime":1643752435377,"results":"11","hashOfConfig":"10"},{"size":4680,"mtime":1643838166952,"results":"12","hashOfConfig":"10"},{"size":746,"mtime":1643575052301,"results":"13","hashOfConfig":"10"},{"size":2274,"mtime":1643755088176,"results":"14","hashOfConfig":"10"},{"size":5801,"mtime":1643838049516,"results":"15","hashOfConfig":"10"},{"size":57,"mtime":1643730319365,"results":"16","hashOfConfig":"10"},{"size":1162,"mtime":1643820666986,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1xm1naz",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/index.js",[],["39","40"],"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/App.js",[],"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/MainPage.js",["41","42"],"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/Navbar.js",["43","44"],"import React from 'react'\nimport { InputForm, Form } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport \"./Navbar.css\"\nimport SearchBar from './SearchBar'\n\nfunction Navbar() {\n    return (\n        <div>\n            <nav className=\"navbar\">\n                <div className=\"navbar-container\">\n                    <NavLink to=\"/\" className=\"nav-logo\">\n                        Brandweb\n                    </NavLink>\n                    <ul className=\"nav-menu\">\n                        <li className=\"nav-item\">\n                            <SearchBar placeholder=\"Look up a game\" />\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n\n        </div>\n    )\n}\n\nexport default Navbar","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/SearchBar.js",["45","46"],"import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"\nimport { Container, Form, FormControl } from 'react-bootstrap';\nimport axios from \"axios\"\nimport \"./SearchBar.css\"\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction SearchBar({ placeholder }) {\n\n    const [results, setResults] = useState([])\n    const [input, setInput] = useState([])\n\n    //I should use usememo here\n    const fetchSearchQueries = async () => {\n        await axios.get('http://localhost:8080/games/names')\n            .then(res => {\n                setResults(...results, res.data)\n            }).catch(e => {\n                console.log(e)\n            })\n    }\n\n    const handleFiltering = (e) => {\n        const searchWord = e.target.value\n        const filter = results.filter((value) => {\n            return value.name.toLowerCase().includes(searchWord.toLowerCase())\n        })\n\n        if (searchWord === 0 || null) {\n            setInput([])\n        } else {\n            setInput(filter)\n        }\n\n        console.log(searchWord)\n    }\n\n\n\n\n    useEffect(() => {\n        fetchSearchQueries()\n    }, [])\n    return (\n        <Container>\n            <Container style={{ display: \"flex\" }}>\n                <Form.Label htmlFor=\"Searchbar\" />\n                <Form.Control\n                    type=\"text\"\n                    id=\"search-query\"\n                    placeholder={placeholder}\n                    onChange={(e) => { handleFiltering(e) }}\n                />\n                <FormControl.Feedback>\n                    <FontAwesomeIcon icon={faSearch} />\n                </FormControl.Feedback>\n\n            </Container>\n            {input.length > 0 ?\n                <Container className=\"search-results\">\n                    {input.length != 0 ? input.map((game) => {\n                        return (\n                            <Link className=\"result-item\" key={game._id} to='/game' state={{\n                                id: game.id\n                            }} >{game.name}</Link>\n\n                        )\n\n                    }) : null}\n                </Container>\n                : null}\n\n\n\n        </Container>\n    )\n\n}\n\nexport default SearchBar;\n","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/DetailedView.js",["47","48","49","50","51","52"],"import React, { useEffect, useState } from 'react';\nimport axios from \"axios\"\nimport {\n    Container,\n    Row,\n    Col,\n} from \"react-bootstrap\"\nimport { useLocation } from 'react-router';\nimport { API_KEY } from \"../env\"\nimport \"./DetailedView.css\"\nimport { Chart as ChartJS } from 'chart.js/auto'\nimport { Pie }            from 'react-chartjs-2'\n\n\nfunction DetailedView() {\n    const [gameData, setGameData] = useState([])\n    const [chartData, setChartData] = useState({\n        platforms: [],\n        ratings: [],\n        developers: [],\n        genres: [],\n        tags: [],\n    })\n\n    const location = useLocation()\n    const { id } = location.state\n\n    const fetchDetailedData = async (id) => {\n        await axios.get(`https://api.rawg.io/api/games/${id}?key=${API_KEY}`)\n            .then(res => {\n                setGameData(...gameData, res.data)\n                setChartData({\n                    platforms: res.data.metacritic_platforms,\n                    ratings: res.data.ratings,\n                    developers: res.data.developers,\n                    genres: res.data.genres,\n                    tags: res.data.tags,\n                })\n            }).catch(e => {\n                console.log({ message: e })\n            })\n    }\n\n    //const platforms = chartData.metacritic_platforms\n    const ratings = gameData.ratings\n    const developers = gameData.developers\n    const genres = gameData.genres\n    const tags = gameData.tags\n\n    const ratingsCount = chartData.ratings.map(rate =>{\n        return rate.count\n    })\n    const ratings1 = chartData.ratings.map(rate =>{\n        return rate.count\n    })\n    const ratingsTitle = chartData.ratings.map(rate =>{\n        return rate.title === \"exceptional\" ? `Exceptional 🏆` : rate.title === \"recommended\" ? \"Recommended 👍\" : rate.title === \"skip\" ? \"Skip 🙅‍♂️\" : \"Meh 🤷‍♀️\"\n    })\n\n    const ratingsPercent = chartData.ratings.map(rate =>{\n        return rate.percent\n    })\n\n    const platforms = chartData.platforms\n    console.log(platforms)\n\n\n    const data = {\n        labels: ratingsTitle,\n        datasets: [{\n            label: 'User feedback',\n            data: ratings1,\n            backgroundColor: [\n                'lightgreen',\n                'rgb(54, 162, 235)',\n                'rgb(255, 205, 86)',\n                'rgb(255, 99, 132)',\n            ],\n            hoverOffset: 4\n        }]\n    };\n\n    useEffect(() => {\n        fetchDetailedData(id)\n    }, [location])\n\n    return (\n        <Container>\n            <Row style={{ marginBottom: \"40px\", marginTop: \"40px\" }}>\n                <Col>\n                    <img style={{ borderRadius: \"8px\", boxShadow: \"10px 10px 5px grey\", marginTop: \"6rem\", width: \"80vh\", height: \"40vh\" }} src={gameData.background_image} alt=\"Game's background picture\" />\n                </Col>\n                <Col>\n                    <Col>\n                        <h1 style={{ marginBottom: \"30px\" }}>{gameData.name}</h1>\n                        <Container style={{ background: \"#e3e3e3\", borderRadius: \"8px\", maxWidth: \"100%\", padding: \"10px\" }}>\n                            <h2>Description</h2>\n                            <p style={{fontSize: \"18px\"}}>{gameData.description_raw}</p>\n                            <a style={{ marginTop: \"20px\" }} href={gameData.website}>Read more on their website</a>\n                            <p style={{ marginTop: \"20px\", fontWeight: 500 }}>Released: {gameData.released} by {developers ? developers.map((dev, index) => {\n                                return dev.name\n                            }) : null}</p>\n                        </Container>\n                    </Col>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={4}>\n                    <h3>Tags</h3>\n                    <div style={{ marginTop: \"20px\", flexWrap: \"wrap\", display: \"flex\" }}>\n                        {tags ? tags.map(tag => {\n                            return <p className=\"tag\">{tag.name}</p>\n                        }) : null}\n                    </div>\n                </Col>\n                <Col xs={2} sm={{ width: \"50%\", height: \"50%\" }} md={{ width: \"20%\", height: \"20%\" }} style={{ width: \"80\", heigth: \"50%\", marginBottom: \"40px\" }}>\n\n                    <h3>Genres</h3>\n                    <Container style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n                        {genres ? genres.map((genre) => {\n                            return <p className=\"genre\">{genre.name}</p>\n                        }) : null}\n                    </Container>\n                </Col>\n                <Col className=\"ratings-container\" xs={5}>\n                    <h3>Ratings</h3>\n                    <Row style={{padding: \"10px\"}}>\n                        <Col>\n                            <h3>Metacritic ratings</h3>\n                            <Container>\n                                <p><strong>Overall: </strong>{gameData.metacritic}</p>\n                                <ul key=\"unordered list\">\n                                    {platforms.length > 0 ? platforms.map((res) => {\n\n                                        return ( <li key={res.platform.id}>{res.platform.name}: {res.metascore}</li>)\n                                    }) : <div>No specific ratings on platforms yet.</div>}\n                                </ul>\n                            </Container>\n                        </Col>\n                        <Col sx={5}>\n                            <h3>Player feedback</h3>\n                            <h5>Overall rating: {gameData.rating}</h5>\n                            <Pie \n                            data={data}/>\n                        </Col>\n                    </Row>\n\n                </Col>\n            </Row>\n        </Container>\n\n    )\n}\n\nexport default DetailedView;\n",["53","54"],"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/env.js",[],"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/Footer.js",["55","56","57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":35,"column":8,"nodeType":"64","endLine":35,"endColumn":14,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":55,"column":193,"nodeType":"68","messageId":"69","endLine":55,"endColumn":209},{"ruleId":"70","severity":1,"message":"71","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":19},{"ruleId":"70","severity":1,"message":"74","line":2,"column":21,"nodeType":"72","messageId":"73","endLine":2,"endColumn":25},{"ruleId":"62","severity":1,"message":"75","line":44,"column":8,"nodeType":"64","endLine":44,"endColumn":10,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":62,"column":35,"nodeType":"79","messageId":"80","endLine":62,"endColumn":37},{"ruleId":"70","severity":1,"message":"81","line":11,"column":19,"nodeType":"72","messageId":"73","endLine":11,"endColumn":26},{"ruleId":"70","severity":1,"message":"82","line":45,"column":11,"nodeType":"72","messageId":"73","endLine":45,"endColumn":18},{"ruleId":"70","severity":1,"message":"83","line":50,"column":11,"nodeType":"72","messageId":"73","endLine":50,"endColumn":23},{"ruleId":"70","severity":1,"message":"84","line":60,"column":11,"nodeType":"72","messageId":"73","endLine":60,"endColumn":25},{"ruleId":"62","severity":1,"message":"85","line":85,"column":8,"nodeType":"64","endLine":85,"endColumn":18,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":91,"column":21,"nodeType":"89","endLine":91,"endColumn":207},{"ruleId":"58","replacedBy":"90"},{"ruleId":"60","replacedBy":"91"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":19},{"ruleId":"70","severity":1,"message":"74","line":2,"column":21,"nodeType":"72","messageId":"73","endLine":2,"endColumn":25},{"ruleId":"70","severity":1,"message":"92","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":17},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCards'. Either include it or remove the dependency array.","ArrayExpression",["95"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'InputForm' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchSearchQueries'. Either include it or remove the dependency array.",["96"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'ChartJS' is defined but never used.","'ratings' is assigned a value but never used.","'ratingsCount' is assigned a value but never used.","'ratingsPercent' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchDetailedData' and 'id'. Either include them or remove the dependency array.",["97"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["93"],["94"],"'SearchBar' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},"Update the dependencies array to be: [fetchCards, page]",{"range":"104","text":"105"},"Update the dependencies array to be: [fetchSearchQueries]",{"range":"106","text":"107"},"Update the dependencies array to be: [fetchDetailedData, id, location]",{"range":"108","text":"109"},[833,839],"[fetchCards, page]",[1204,1206],"[fetchSearchQueries]",[2449,2459],"[fetchDetailedData, id, location]"]