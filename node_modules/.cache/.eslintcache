[{"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/index.js":"1","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/App.js":"2","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/MainPage.js":"3","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/Navbar.js":"4","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/SearchBar.js":"5","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/DetailedView.js":"6","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/env.js":"7"},{"size":154,"mtime":1643562212228,"results":"8","hashOfConfig":"9"},{"size":586,"mtime":1643647234076,"results":"10","hashOfConfig":"9"},{"size":4291,"mtime":1643728025207,"results":"11","hashOfConfig":"9"},{"size":746,"mtime":1643575052301,"results":"12","hashOfConfig":"9"},{"size":2248,"mtime":1643730267471,"results":"13","hashOfConfig":"9"},{"size":5154,"mtime":1643740516261,"results":"14","hashOfConfig":"9"},{"size":57,"mtime":1643730319365,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1xm1naz",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/index.js",[],["34","35"],"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/App.js",[],"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/MainPage.js",["36","37"],"import React, { useEffect, useState } from 'react';\nimport axios from \"axios\"\nimport {\n    Button,\n    Container,\n    Row,\n    Col,\n    Card,\n    Pagination\n} from \"react-bootstrap\"\n\nfunction MainPage() {\n    const [gameCards, setGameCards] = useState([])\n    const [page, setPage] = useState(1)\n\n    //I should use usememo here maybe?\n    const fetchCards = async (page) => {\n        setGameCards([])\n        await axios.get(`http://localhost:8080/games/query?page=${page}&limit=${6}`)\n            .then(res => {\n                setGameCards(...gameCards, res.data)\n            }).catch(e => {\n                console.log(e)\n            })\n    }\n\n    const handlePageChange = (value) =>{\n        //e.preventDefault()\n        setPage(value)\n    }\n\n    useEffect(() => {\n        fetchCards(page)\n    }, [page]);\n\n\n\n    return (\n        <Container>\n            <h1>Games</h1>\n            <Row xxl={7} xl={4}  lg={4} md={3} sm={2} s>\n                {\n                    gameCards.length > 0 ? gameCards.map((game) => {\n\n                        return (\n                            <Col alt=\"columns\" key={game.id} >\n                                <Card style={{\n                                    minWidth: \"10vh\",\n                                    width: \"100%\",\n                                    marginBottom: \"1rem\",\n                                    maxHeight: \"68vh\",\n                                    height: \"100%\"\n\n                                }}>\n                                    <Card.Img alt=\"Game background\" variant=\"top\" style={{ minHeight: \"20vh\", minWidth: \"24vh\", maxHeight: \"22vh\", width: \"100%\" }} src={game.background_image} alt=\"Game image\" />\n                                    <Card.Body alt=\"Body\" style={{ alignItems: \"space-between\", display: \"grid\" }}>\n                                        <h5 className=\"card-title\">{game.name}</h5>\n                                        <Card.Text alt=\"Game's rating\" className=\"card-text\">Rating: {game.rating}</Card.Text>\n                                        <Card.Text style={{display: \"flex\", height: \"100%\", flexWrap: \"wrap\"}}>\n                                            {game[\"genres\"].map((genre) => {\n                                                return <span style={{\n                                                    background: \"lightgrey\",\n                                                    width: \"min-content\",\n                                                    margin: \"0px 5px 4px 0px\",\n                                                    borderRadius: \"5px\",\n                                                    height: \"min-content\",\n                                                    padding: \"2px 4px 2px 4px\",\n                                                    flexWrap: \"wrap\"\n                                                }} key={genre.id}>{genre.name}</span>\n                                            })}\n                                        </Card.Text>\n                                        <Card.Text alt=\"Card text\" style={{ fontSize: \"0.8rem\", color: \"grey\" }}>Last updated: {game.updated.slice(0, 10)}</Card.Text>\n                                        <Card.Text >{game.description}</Card.Text>\n                                        <Button variant=\"primary\">See details</Button>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        )\n                    }) : null\n                }\n            </Row>\n            <p>This pagination below here doesn't work yet....</p>\n            <Pagination style={{ justifyContent: \"center\", marginTop: \"10vh\" }}>\n\n                <Pagination.First alt=\"First page\" />\n                <Pagination.Prev alt=\"Prev page\" />\n                {gameCards.length > 0 ? gameCards.map((page, index) =>{\n                    return <Pagination.Item alt=\"Page selection\" value={index +1} key={index + 1} onClick={(e) => {\n                        handlePageChange(index+1)\n                    }}>{index +1}</Pagination.Item>\n                }) : null}\n                <Pagination.Next alt=\"next page\" />\n                <Pagination.Last alt=\"Last page\" />\n            </Pagination>\n        </Container>\n    )\n}\n\nexport default MainPage;\n","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/Navbar.js",["38","39"],"import React from 'react'\nimport { InputForm, Form } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport \"./Navbar.css\"\nimport SearchBar from './SearchBar'\n\nfunction Navbar() {\n    return (\n        <div>\n            <nav className=\"navbar\">\n                <div className=\"navbar-container\">\n                    <NavLink to=\"/\" className=\"nav-logo\">\n                        Brandweb\n                    </NavLink>\n                    <ul className=\"nav-menu\">\n                        <li className=\"nav-item\">\n                            <SearchBar placeholder=\"Look up a game\" />\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n\n        </div>\n    )\n}\n\nexport default Navbar","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/SearchBar.js",["40","41"],"import React, { useState, useEffect } from 'react';\nimport { Link} from \"react-router-dom\"\nimport { Container, Form, FormControl } from 'react-bootstrap';\nimport axios from \"axios\"\nimport \"./SearchBar.css\"\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction SearchBar({ placeholder }) {\n\n    const [results, setResults] = useState([])\n    const [input, setInput] = useState([])\n\n    //I should use usememo here\n    const fetchSearchQueries = async () => {\n        await axios.get('http://localhost:8080/games/names')\n            .then(res => {\n                setResults(...results, res.data)\n            }).catch(e => {\n                console.log(e)\n            })\n    }\n\n    const handleFiltering = (e) => {\n        const searchWord = e.target.value\n        const filter = results.filter((value) => {\n            return value.name.toLowerCase().includes(searchWord.toLowerCase())\n        })\n\n        if (searchWord === 0 || null) {\n            setInput([])\n        } else {\n            setInput(filter)\n        }\n\n        console.log(searchWord)\n    }\n\n\n\n\n    useEffect(() => {\n        fetchSearchQueries()\n    }, [])\n    return (\n        <Container>\n            <Container style={{ display: \"flex\" }}>\n                <Form.Label htmlFor=\"Searchbar\" />\n                <Form.Control\n                    type=\"text\"\n                    id=\"search-query\"\n                    placeholder={placeholder}\n                    onChange={(e) => { handleFiltering(e) }}\n                />\n                <FormControl.Feedback>\n                    <FontAwesomeIcon icon={faSearch} />\n                </FormControl.Feedback>\n\n            </Container>\n            {input.length > 0 ?\n                <Container className=\"search-results\">\n                    {input.length != 0 ? input.map((game) => {\n                        return (\n                            <Link key={game._id} to='/game' state={{\n                                id: game.id\n                            }} >{game.name}</Link>\n                        )\n\n                    }) : null}\n                </Container>\n                : null}\n\n\n\n        </Container>\n    )\n\n}\n\nexport default SearchBar;\n","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/DetailedView.js",["42","43","44"],"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/env.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":34,"column":8,"nodeType":"51","endLine":34,"endColumn":14,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":55,"column":193,"nodeType":"55","messageId":"56","endLine":55,"endColumn":209},{"ruleId":"57","severity":1,"message":"58","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":19},{"ruleId":"57","severity":1,"message":"61","line":2,"column":21,"nodeType":"59","messageId":"60","endLine":2,"endColumn":25},{"ruleId":"49","severity":1,"message":"62","line":44,"column":8,"nodeType":"51","endLine":44,"endColumn":10,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":62,"column":35,"nodeType":"66","messageId":"67","endLine":62,"endColumn":37},{"ruleId":"57","severity":1,"message":"68","line":4,"column":5,"nodeType":"59","messageId":"60","endLine":4,"endColumn":11},{"ruleId":"49","severity":1,"message":"69","line":37,"column":8,"nodeType":"51","endLine":37,"endColumn":18,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":43,"column":21,"nodeType":"73","endLine":43,"endColumn":132},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCards'. Either include it or remove the dependency array.","ArrayExpression",["76"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-unused-vars","'InputForm' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchSearchQueries'. Either include it or remove the dependency array.",["77"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchDetailedData' and 'id'. Either include them or remove the dependency array.",["78"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [fetchCards, page]",{"range":"85","text":"86"},"Update the dependencies array to be: [fetchSearchQueries]",{"range":"87","text":"88"},"Update the dependencies array to be: [fetchDetailedData, id, location]",{"range":"89","text":"90"},[802,808],"[fetchCards, page]",[1203,1205],"[fetchSearchQueries]",[956,966],"[fetchDetailedData, id, location]"]