[{"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/index.js":"1","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/App.js":"2","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/MainPage.js":"3","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/Navbar.js":"4"},{"size":154,"mtime":1643562212228,"results":"5","hashOfConfig":"6"},{"size":436,"mtime":1643562447065,"results":"7","hashOfConfig":"6"},{"size":3089,"mtime":1643565821634,"results":"8","hashOfConfig":"6"},{"size":731,"mtime":1643562049811,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1xm1naz",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/index.js",[],["20","21"],"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/App.js",[],"/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/MainPage.js",["22","23","24"],"import React, { useEffect, useState } from 'react';\nimport axios from \"axios\"\n\nfunction MainPage() {\n    const [results, setResults] = useState([])\n    const [gameCards, setGameCards] = useState([])\n\n    const fetcher = async (e) => {\n        e.preventDefault()\n        await axios.get(\"http://localhost:8080/\")\n            .then(res => {\n                res.data.forEach(obj => {\n                    setResults(prev => [...prev, obj])\n                })\n                console.log(results)\n            }).catch(e => {\n                console.log(e)\n            })\n    }\n\n    const fetchCards = async () => {\n        await axios.get(`http://localhost:8080/games`)\n            .then(res => {\n                setGameCards(...gameCards, res.data)\n            }).catch(e => {\n                console.log(e)\n            })\n    }\n\n    useEffect(() => {\n        fetchCards()\n    }, []);\n\n\n\n    return (\n        <div className=\"container-sm\">\n            <h1>Games</h1>\n            <div className=\"row row-cols-4\">\n                {\n                    gameCards ? gameCards.map(game => {\n\n                        return (\n                            <div className=\"col\">\n                                <div className=\"card\" style={{\n                                    maxWidth: \"20rem\",\n                                    marginBottom: \"1rem\"\n\n                                }}>\n                                    <img style={{ height: \"22vh\" }} src={game.background_image} className=\"card-img-top\" alt=\"Game image\" />\n                                    <div className=\"card-body\">\n                                        <h5 className=\"card-title\">{game.name}</h5>\n                                        <p className=\"card-text\">Rating: {game.rating}</p>\n                                        <p>\n                                            {game[\"genres\"].map(genre => {\n                                                return <span style={{\n                                                    background: \"lightgrey\",\n                                                    width: \"100%\",\n                                                    margin: \"5px\",\n                                                    borderRadius: \"5px\",\n                                                    padding: \"2px 4px 2px 4px\"\n                                                }}>{genre.name}</span>\n                                            })}\n                                        </p>\n                                        <p style={{fontSize: \"0.8rem\", color: \"grey\"}} className=\"card-text\">Last updated: {game.updated.slice(0, 10)}</p>\n                                        <p className=\"card-text\">{game.description}</p>\n                                        <button type=\"button\" className=\"btn btn-primary\">See details</button>\n                                    </div>\n                                </div>\n                            </div>\n                        )\n                    }) : null\n                }\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default MainPage;\n","/Users/gaspar/Desktop/Work/Assignments/Brandweb-test/src/Components/Navbar.js",[],{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":8,"column":11,"nodeType":"31","messageId":"32","endLine":8,"endColumn":18},{"ruleId":"33","severity":1,"message":"34","line":32,"column":8,"nodeType":"35","endLine":32,"endColumn":10,"suggestions":"36"},{"ruleId":"37","severity":1,"message":"38","line":50,"column":37,"nodeType":"39","endLine":50,"endColumn":141},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'fetcher' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCards'. Either include it or remove the dependency array.","ArrayExpression",["42"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [fetchCards]",{"range":"45","text":"46"},[876,878],"[fetchCards]"]